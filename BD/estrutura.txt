create database locadora;

use locadora;

CREATE TABLE proprietario (
    CPF VARCHAR(14)PRIMARY KEY,
    nome VARCHAR(20),
    telefone VARCHAR(20)
);

INSERT proprietario VALUES
('00123','Tony Stark','58900'),
('00333','Bruce Banner','58922'),
('00111','Rick Sanchez','00000');


CREATE TABLE locadora (
    CNPJ VARCHAR(14)PRIMARY KEY,
    endereco VARCHAR(50),
    senha VARCHAR(50)
);

INSERT locadora VALUES
('00143','221b, Baker St, London','111'),
('00155','1090, 5th Avenenue, NYC','222'),
('00222','167, 43rd Avenue NE,  Seattle','333');

CREATE TABLE filme (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50),
    ano INT,
    classificacao INT,
    preco_por_Dia DOUBLE
);

INSERT INTO filme (nome, ano, classificacao, preco_por_Dia) VALUES
('Psicose', 1961, 16, 1.5),
('Se Beber, não case', 2009, 12, 1.5),
('Star wars: Empire Strikes Back', 1980, 10, 1.5),
('Uma mente Brilhante', 2001, 12, 2),
('Interestelar', 2014, 12, 2);

CREATE TABLE VHS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    disponibilidade BOOLEAN,
    tamanho DOUBLE,
    id_filme INT,
    FOREIGN KEY (id_filme) REFERENCES filme(id)
);

INSERT INTO VHS (disponibilidade, tamanho, id_filme) VALUES
(false, 180, 1),
(true, 180, 1),
(false, 180, 2),
(true, 180, 3),
(true, 180, 4),
(true, 180, 4),
(false, 180, 5);

CREATE TABLE cliente (
    CPF VARCHAR(14)PRIMARY KEY,
    nome VARCHAR(20),
    telefone VARCHAR(20)
);

INSERT cliente VALUES
('98500','Magali','35678892'),
('90178','Cascão','35222200'),
('90136','Cebolinha','35777654'),
('81283','Mônica','35210907');

CREATE TABLE possui (
    CPF_proprietario VARCHAR(14),
    CPNJ_locadora VARCHAR(14),
    propiedade DOUBLE,
    FOREIGN KEY (CPF_proprietario) REFERENCES proprietario(CPF),
    FOREIGN KEY (CPNJ_locadora) REFERENCES locadora(CNPJ)
);

INSERT possui VALUES
('00123','00143',1),
('00123','00155',0.2),
('00333','00155',0.8),
('00111','00222',1);

CREATE TABLE tem (
    CPNJ_locadora VARCHAR(14),
    id_filme int,
    FOREIGN KEY (CPNJ_locadora) REFERENCES locadora(CNPJ),
    FOREIGN KEY (id_filme) REFERENCES filme(id)
);

INSERT tem VALUES
('00143',1),
('00143',2),
('00143',4),
('00155',1),
('00155',3),
('00155',4),
('00155',5);

CREATE TABLE reserva (
    CPF_Cliente VARCHAR(14),
    id_VHS INT,
    data_inicio DATE,
    data_fim DATE,
    FOREIGN KEY (CPF_Cliente) REFERENCES cliente(CPF),
    FOREIGN KEY (id_VHS) REFERENCES VHS(id)
);

INSERT INTO reserva VALUES
('98500', 2, '2024-06-01', '2024-06-07'),
('90178', 3, '2024-06-05', '2024-06-12'),
('81283', 7, '2024-06-10', '2024-06-15');

CREATE TABLE aluga (
    CPF_Cliente VARCHAR(14),
    id_VHS INT,
    data_inicio DATE,
    data_fim DATE,
    data_entrega DATE,
    multa BOOLEAN,
    reservado_previamente BOOLEAN,
    FOREIGN KEY (CPF_Cliente) REFERENCES cliente(CPF),
    FOREIGN KEY (id_VHS) REFERENCES VHS(id)
);

INSERT INTO aluga VALUES
('98500', 2,'2024-06-01', '2024-06-07', '2024-06-09', true, true),
('90178', 3,'2024-06-05', '2024-06-12', '2024-06-12', false, true),
('90178', 6,'2024-06-05', '2024-06-12', '2024-06-12', false, false);

-- Consulta utilizando JOIN para listar os filmes alugados por cada cliente
SELECT c.nome AS cliente, f.nome AS filme, a.data_inicio, a.data_fim, a.data_entrega
FROM aluga a
JOIN cliente c ON a.CPF_Cliente = c.CPF
JOIN VHS v ON a.id_VHS = v.id
JOIN filme f ON v.id_filme = f.id;

-- Consulta para listar todos os filmes e suas respectivas locadoras
SELECT f.nome AS filme, l.endereco AS locadora
FROM filme f
JOIN tem t ON f.id = t.id_filme
JOIN locadora l ON t.CPNJ_locadora = l.CNPJ;

-- Consulta para listar todos os clientes que têm reservas ativas
SELECT c.nome AS cliente, f.nome AS filme, r.data_inicio, r.data_fim
FROM reserva r
JOIN cliente c ON r.CPF_Cliente = c.CPF
JOIN VHS v ON r.id_VHS = v.id
JOIN filme f ON v.id_filme = f.id
WHERE r.data_fim >= CURDATE();


-- Consulta  para listar os proprietários que possuem locadoras com filmes disponíveis para aluguel
SELECT p.nome AS proprietario, l.endereco AS locadora, f.nome AS filme
FROM proprietario p
JOIN possui po ON p.CPF = po.CPF_proprietario
JOIN locadora l ON po.CPNJ_locadora = l.CNPJ
JOIN tem t ON l.CNPJ = t.CPNJ_locadora
JOIN filme f ON t.id_filme = f.id
JOIN VHS v ON f.id = v.id_filme
WHERE v.disponibilidade = true;


-- Criação de uma Stored Procedure para inserir um novo filme e atualizar a tabela tem com a locadora correspondente
DELIMITER //

CREATE PROCEDURE adicionar_filme(
    IN p_nome VARCHAR(50),
    IN p_ano INT,
    IN p_classificacao INT,
    IN p_preco_por_dia DOUBLE,
    IN p_cnpj_locadora VARCHAR(14)
)
BEGIN
    DECLARE p_id_filme INT;
    INSERT INTO filme (nome, ano, classificacao, preco_por_Dia) VALUES (p_nome, p_ano, p_classificacao, p_preco_por_dia);
    SET p_id_filme = LAST_INSERT_ID();
    INSERT INTO tem (CPNJ_locadora, id_filme) VALUES (p_cnpj_locadora, p_id_filme);
END //

DELIMITER ;


